{
	"name": "Read_Write_fsspec",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "secondsparkpol",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "7c47a584-63d7-445c-9be7-24f223624202"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/aa92dd3b-6b94-4f17-90fe-f82f46b88530/resourceGroups/rg-synapse/providers/Microsoft.Synapse/workspaces/synpasepocshubham/bigDataPools/secondsparkpol",
				"name": "secondsparkpol",
				"type": "Spark",
				"endpoint": "https://synpasepocshubham.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/secondsparkpol",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import fsspec as fs\r\n",
					"import pandas as pd\r\n",
					"adls_account_name = 'synapsepocssd'\r\n",
					"sas_key = TokenLibrary.getConnectionString('LS_fsspec')\r\n",
					"\r\n",
					"fsspec_handle = fs.open(\r\n",
					"    'abfss://demo@synapsepocssd.dfs.core.windows.net/SalesOrderDetail.csv',\r\n",
					"    account_name = adls_account_name,\r\n",
					"    sas_token = sas_key\r\n",
					")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"with fsspec_handle.open() as f:\r\n",
					"    df = pd.read_csv(f)\r\n",
					"    print('x')"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"new_row=[['Tony',26,'Male'],['Jack',23,'Male']]\r\n",
					"data = pd.DataFrame(new_row)\r\n",
					"data.head()"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"fsspec_handle_2 = fs.open(\r\n",
					"    'abfss://demo@synapsepocssd.dfs.core.windows.net/fsspec.csv',\r\n",
					"    account_name = adls_account_name,\r\n",
					"    sas_token = sas_key,\r\n",
					"    mode='wt'\r\n",
					")"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"with fsspec_handle_2.open() as f:\r\n",
					"    data.to_csv(f)\r\n",
					"    print('x')"
				],
				"execution_count": 15
			}
		]
	}
}